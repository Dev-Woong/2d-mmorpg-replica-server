// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR C_JwtLoginRequest::C_JwtLoginRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.accesstoken_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_JwtLoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_JwtLoginRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_JwtLoginRequestDefaultTypeInternal() {}
  union {
    C_JwtLoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_JwtLoginRequestDefaultTypeInternal _C_JwtLoginRequest_default_instance_;
PROTOBUF_CONSTEXPR S_JwtLoginReply::S_JwtLoginReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_JwtLoginReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_JwtLoginReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_JwtLoginReplyDefaultTypeInternal() {}
  union {
    S_JwtLoginReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_JwtLoginReplyDefaultTypeInternal _S_JwtLoginReply_default_instance_;
PROTOBUF_CONSTEXPR C_CreateCharacterRequest::C_CreateCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.gender_)*/0
  , /*decltype(_impl_.region_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C_CreateCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_CreateCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_CreateCharacterRequestDefaultTypeInternal() {}
  union {
    C_CreateCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_CreateCharacterRequestDefaultTypeInternal _C_CreateCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR S_CreateCharacterReply::S_CreateCharacterReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_CreateCharacterReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_CreateCharacterReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_CreateCharacterReplyDefaultTypeInternal() {}
  union {
    S_CreateCharacterReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_CreateCharacterReplyDefaultTypeInternal _S_CreateCharacterReply_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Protocol_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Protocol_2eproto[4];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const uint32_t TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_JwtLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_JwtLoginRequest, _impl_.accesstoken_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_JwtLoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_JwtLoginReply, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CreateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CreateCharacterRequest, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CreateCharacterRequest, _impl_.gender_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C_CreateCharacterRequest, _impl_.region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CreateCharacterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CreateCharacterReply, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_CreateCharacterReply, _impl_.detail_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::C_JwtLoginRequest)},
  { 7, -1, -1, sizeof(::Protocol::S_JwtLoginReply)},
  { 14, -1, -1, sizeof(::Protocol::C_CreateCharacterRequest)},
  { 23, -1, -1, sizeof(::Protocol::S_CreateCharacterReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_C_JwtLoginRequest_default_instance_._instance,
  &::Protocol::_S_JwtLoginReply_default_instance_._instance,
  &::Protocol::_C_CreateCharacterRequest_default_instance_._instance,
  &::Protocol::_S_CreateCharacterReply_default_instance_._instance,
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\022\010Protocol\"(\n\021C_JwtLogin"
  "Request\022\023\n\013accessToken\030\001 \001(\t\"9\n\017S_JwtLog"
  "inReply\022&\n\006result\030\001 \001(\0162\026.Protocol.ELogi"
  "nResult\"r\n\030C_CreateCharacterRequest\022\020\n\010u"
  "sername\030\001 \001(\t\022!\n\006gender\030\002 \001(\0162\021.Protocol"
  ".EGender\022!\n\006region\030\003 \001(\0162\021.Protocol.EReg"
  "ion\"9\n\026S_CreateCharacterReply\022\017\n\007success"
  "\030\001 \001(\010\022\016\n\006detail\030\002 \001(\t*u\n\005MsgId\022\027\n\023C_JWT"
  "_LOGIN_REQUEST\020\000\022\025\n\021S_JWT_LOGIN_REPLY\020\001\022"
  "\036\n\032C_CREATE_CHARACTER_REQUEST\020\002\022\034\n\030S_CRE"
  "ATE_CHARACTER_REPLY\020\003*S\n\014ELoginResult\022\013\n"
  "\007SUCCESS\020\000\022\021\n\rINVALID_TOKEN\020\001\022\021\n\rTOKEN_E"
  "XPIRED\020\002\022\020\n\014SERVER_ERROR\020\003*>\n\007EGender\022\017\n"
  "\013GENDER_NONE\020\000\022\017\n\013GENDER_MALE\020\001\022\021\n\rGENDE"
  "R_FEMAIL\020\002*:\n\007ERegion\022\017\n\013REGION_NONE\020\000\022\r"
  "\n\tREGION_GO\020\001\022\017\n\013REGION_BACK\020\002B\033\252\002\030Googl"
  "e.Protobuf.Protocolb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false, false, 667, descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
    file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
namespace Protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[0];
}
bool MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELoginResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[1];
}
bool ELoginResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGender_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[2];
}
bool EGender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERegion_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Protocol_2eproto);
  return file_level_enum_descriptors_Protocol_2eproto[3];
}
bool ERegion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class C_JwtLoginRequest::_Internal {
 public:
};

C_JwtLoginRequest::C_JwtLoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_JwtLoginRequest)
}
C_JwtLoginRequest::C_JwtLoginRequest(const C_JwtLoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_JwtLoginRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.accesstoken_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.accesstoken_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.accesstoken_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_accesstoken().empty()) {
    _this->_impl_.accesstoken_.Set(from._internal_accesstoken(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C_JwtLoginRequest)
}

inline void C_JwtLoginRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.accesstoken_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.accesstoken_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.accesstoken_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_JwtLoginRequest::~C_JwtLoginRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C_JwtLoginRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_JwtLoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.accesstoken_.Destroy();
}

void C_JwtLoginRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_JwtLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_JwtLoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accesstoken_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_JwtLoginRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string accessToken = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C_JwtLoginRequest.accessToken"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_JwtLoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_JwtLoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string accessToken = 1;
  if (!this->_internal_accesstoken().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_JwtLoginRequest.accessToken");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accesstoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_JwtLoginRequest)
  return target;
}

size_t C_JwtLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_JwtLoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string accessToken = 1;
  if (!this->_internal_accesstoken().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_JwtLoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_JwtLoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_JwtLoginRequest::GetClassData() const { return &_class_data_; }


void C_JwtLoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_JwtLoginRequest*>(&to_msg);
  auto& from = static_cast<const C_JwtLoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_JwtLoginRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_accesstoken().empty()) {
    _this->_internal_set_accesstoken(from._internal_accesstoken());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_JwtLoginRequest::CopyFrom(const C_JwtLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_JwtLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_JwtLoginRequest::IsInitialized() const {
  return true;
}

void C_JwtLoginRequest::InternalSwap(C_JwtLoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.accesstoken_, lhs_arena,
      &other->_impl_.accesstoken_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C_JwtLoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class S_JwtLoginReply::_Internal {
 public:
};

S_JwtLoginReply::S_JwtLoginReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_JwtLoginReply)
}
S_JwtLoginReply::S_JwtLoginReply(const S_JwtLoginReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_JwtLoginReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S_JwtLoginReply)
}

inline void S_JwtLoginReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_JwtLoginReply::~S_JwtLoginReply() {
  // @@protoc_insertion_point(destructor:Protocol.S_JwtLoginReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_JwtLoginReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_JwtLoginReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_JwtLoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_JwtLoginReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_JwtLoginReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.ELoginResult result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::Protocol::ELoginResult>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_JwtLoginReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_JwtLoginReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.ELoginResult result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_JwtLoginReply)
  return target;
}

size_t S_JwtLoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_JwtLoginReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.ELoginResult result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_JwtLoginReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_JwtLoginReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_JwtLoginReply::GetClassData() const { return &_class_data_; }


void S_JwtLoginReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_JwtLoginReply*>(&to_msg);
  auto& from = static_cast<const S_JwtLoginReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_JwtLoginReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_JwtLoginReply::CopyFrom(const S_JwtLoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_JwtLoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_JwtLoginReply::IsInitialized() const {
  return true;
}

void S_JwtLoginReply::InternalSwap(S_JwtLoginReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_JwtLoginReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class C_CreateCharacterRequest::_Internal {
 public:
};

C_CreateCharacterRequest::C_CreateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C_CreateCharacterRequest)
}
C_CreateCharacterRequest::C_CreateCharacterRequest(const C_CreateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C_CreateCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.gender_){}
    , decltype(_impl_.region_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.gender_, &from._impl_.gender_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.region_) -
    reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.region_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C_CreateCharacterRequest)
}

inline void C_CreateCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.gender_){0}
    , decltype(_impl_.region_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C_CreateCharacterRequest::~C_CreateCharacterRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C_CreateCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_CreateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
}

void C_CreateCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C_CreateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C_CreateCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  ::memset(&_impl_.gender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.region_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.region_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_CreateCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C_CreateCharacterRequest.username"));
        } else
          goto handle_unusual;
        continue;
      // .Protocol.EGender gender = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_gender(static_cast<::Protocol::EGender>(val));
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ERegion region = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_region(static_cast<::Protocol::ERegion>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_CreateCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C_CreateCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C_CreateCharacterRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // .Protocol.EGender gender = 2;
  if (this->_internal_gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_gender(), target);
  }

  // .Protocol.ERegion region = 3;
  if (this->_internal_region() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C_CreateCharacterRequest)
  return target;
}

size_t C_CreateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C_CreateCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .Protocol.EGender gender = 2;
  if (this->_internal_gender() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_gender());
  }

  // .Protocol.ERegion region = 3;
  if (this->_internal_region() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_region());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_CreateCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C_CreateCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_CreateCharacterRequest::GetClassData() const { return &_class_data_; }


void C_CreateCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C_CreateCharacterRequest*>(&to_msg);
  auto& from = static_cast<const C_CreateCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C_CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_gender() != 0) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (from._internal_region() != 0) {
    _this->_internal_set_region(from._internal_region());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_CreateCharacterRequest::CopyFrom(const C_CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C_CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_CreateCharacterRequest::IsInitialized() const {
  return true;
}

void C_CreateCharacterRequest::InternalSwap(C_CreateCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_CreateCharacterRequest, _impl_.region_)
      + sizeof(C_CreateCharacterRequest::_impl_.region_)
      - PROTOBUF_FIELD_OFFSET(C_CreateCharacterRequest, _impl_.gender_)>(
          reinterpret_cast<char*>(&_impl_.gender_),
          reinterpret_cast<char*>(&other->_impl_.gender_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_CreateCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class S_CreateCharacterReply::_Internal {
 public:
};

S_CreateCharacterReply::S_CreateCharacterReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_CreateCharacterReply)
}
S_CreateCharacterReply::S_CreateCharacterReply(const S_CreateCharacterReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_CreateCharacterReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.detail_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detail().empty()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S_CreateCharacterReply)
}

inline void S_CreateCharacterReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.detail_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S_CreateCharacterReply::~S_CreateCharacterReply() {
  // @@protoc_insertion_point(destructor:Protocol.S_CreateCharacterReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_CreateCharacterReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.detail_.Destroy();
}

void S_CreateCharacterReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_CreateCharacterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_CreateCharacterReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detail_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_CreateCharacterReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string detail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.S_CreateCharacterReply.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_CreateCharacterReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_CreateCharacterReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string detail = 2;
  if (!this->_internal_detail().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_CreateCharacterReply.detail");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_CreateCharacterReply)
  return target;
}

size_t S_CreateCharacterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_CreateCharacterReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string detail = 2;
  if (!this->_internal_detail().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_detail());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_CreateCharacterReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_CreateCharacterReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_CreateCharacterReply::GetClassData() const { return &_class_data_; }


void S_CreateCharacterReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_CreateCharacterReply*>(&to_msg);
  auto& from = static_cast<const S_CreateCharacterReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_CreateCharacterReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_detail().empty()) {
    _this->_internal_set_detail(from._internal_detail());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_CreateCharacterReply::CopyFrom(const S_CreateCharacterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_CreateCharacterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_CreateCharacterReply::IsInitialized() const {
  return true;
}

void S_CreateCharacterReply::InternalSwap(S_CreateCharacterReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_CreateCharacterReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::C_JwtLoginRequest*
Arena::CreateMaybeMessage< ::Protocol::C_JwtLoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_JwtLoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_JwtLoginReply*
Arena::CreateMaybeMessage< ::Protocol::S_JwtLoginReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_JwtLoginReply >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_CreateCharacterRequest*
Arena::CreateMaybeMessage< ::Protocol::C_CreateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_CreateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_CreateCharacterReply*
Arena::CreateMaybeMessage< ::Protocol::S_CreateCharacterReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_CreateCharacterReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
